import React, { useContext, useState } from "react";
import { styled, useTheme } from "@mui/material/styles";
import Box from "@mui/material/Box";
import Drawer from "@mui/material/Drawer";
import CssBaseline from "@mui/material/CssBaseline";
import MuiAppBar from "@mui/material/AppBar";
import Toolbar from "@mui/material/Toolbar";
import { Menu, MenuItem } from "@mui/material";
import List from "@mui/material/List";
import Typography from "@mui/material/Typography";
import Divider from "@mui/material/Divider";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";
import ChevronRightIcon from "@mui/icons-material/ChevronRight";
import ListItem from "@mui/material/ListItem";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import Home from "@mui/icons-material/Home";
import Button from "@mui/material/Button";
import NotificationsIcon from "@mui/icons-material/Notifications";
import SchoolIcon from "@mui/icons-material/School";
import SourceIcon from "@mui/icons-material/Source";
import CollectionsIcon from "@mui/icons-material/Collections";
import SitemapIcon from "@mui/icons-material/LineAxis";
import CelebrationIcon from "@mui/icons-material/Celebration";
import Feedback from "@mui/icons-material/Feedback";
import Footer from "./Footer";
import NextLink from "next/link";
import classes from "../../styles/Layout.module.css";
import Head from "next/head";
import HomeIcon from "@mui/icons-material/Home";
import Questions from "@mui/icons-material/QuestionAnswer";
import { useRouter } from "next/router";
import { VerifiedUserSharp } from "@mui/icons-material";
import { Store } from "../../utils/Store";
import { Link } from "@mui/material";
import dynamic from "next/dynamic";
import Cookies from "js-cookie";
const drawerWidth = 240;

const Main = styled("main", { shouldForwardProp: (prop) => prop !== "open" })(
  ({ theme, open }) => ({
    flexGrow: 1,
    padding: theme.spacing(0),
    transition: theme.transitions.create("margin", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    marginLeft: `-${drawerWidth}px`,
    ...(open && {
      transition: theme.transitions.create("margin", {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen,
      }),
      marginLeft: 0,
    }),
  })
);

const AppBar = styled(MuiAppBar, {
  shouldForwardProp: (prop) => prop !== "open",
})(({ theme, open }) => ({
  transition: theme.transitions.create(["margin", "width"], {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  ...(open && {
    width: `calc(100% - ${drawerWidth}px)`,
    marginLeft: `${drawerWidth}px`,
    transition: theme.transitions.create(["margin", "width"], {
      easing: theme.transitions.easing.easeOut,
      duration: theme.transitions.duration.enteringScreen,
    }),
  }),
}));

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  padding: theme.spacing(0, 2),
  // necessary for content to be below app bar
  ...theme.mixins.toolbar,
  justifyContent: "flex-end",
}));

function Header({ children, title }) {
  const theme = useTheme();
  const [open, setOpen] = useState(false);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerClose = () => {
    setOpen(false);
  };
  const router = useRouter();
  const handleClick = () => {
    router.push("/auth/login");
  };
  const { state, dispatch } = useContext(Store);
  const { userInfo } = state;
  const [anchorEl, setAnchorEl] = useState(null);
  const loginClickHandler = (e) => {
    setAnchorEl(e.currentTarget);
  };
  const loginMenuCloseHandler = () => {
    setAnchorEl(null);
  };
  const logoutClickHandler = () => {
    setAnchorEl(null);
    dispatch({ type: "USER_LOGOUT" });
    Cookies.remove("userInfo");
    Cookies.remove("cartItems");
    router.push("/");
  };
  return (
    <>
      <Head>
        <title>{title ? title : "DETS CONNECT"}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box sx={{ display: "flex" }}>
        <CssBaseline />
        <AppBar position="fixed" open={open} sx={{ background: "#211541" }}>
          <Toolbar>
            <IconButton
              color="inherit"
              aria-label="open drawer"
              onClick={handleDrawerOpen}
              edge="start"
              sx={{ mr: 2, ...(open && { display: "none" }) }}
            >
              <MenuIcon />
            </IconButton>
            <NextLink href={"/"} passHref>
              <Link>
                <Home sx={{ textAlign: "center", cursor: "pointer" }} />
              </Link>
            </NextLink>
            <Typography
              variant="h6"
              noWrap
              component="div"
              sx={{ textAlign: "center", width: "100%", cursor: "pointer" }}
            >
              DETS CONNECT
            </Typography>

            {userInfo ? (
              <>
                <Button
                  aria-controls="simple-menu"
                  aria-haspopup="true"
                  onClick={loginClickHandler}
                  className={classes.navbarButton}
                >
                  {userInfo.name}
                </Button>
                <Menu
                  id="simple-menu"
                  anchorEl={anchorEl}
                  keepMounted
                  open={Boolean(anchorEl)}
                  onClose={loginMenuCloseHandler}
                >
                  <MenuItem onClick={loginMenuCloseHandler}>Profile</MenuItem>
                  <MenuItem onClick={loginMenuCloseHandler}>
                    My account
                  </MenuItem>
                  <MenuItem onClick={logoutClickHandler}>Logout</MenuItem>
                </Menu>
              </>
            ) : (
              <NextLink href="/auth" passHref>
                <Link>Login</Link>
              </NextLink>
            )}
          </Toolbar>
        </AppBar>
        <Drawer
          sx={{
            width: drawerWidth,
            flexShrink: 0,
            "& .MuiDrawer-paper": {
              width: drawerWidth,
              boxSizing: "border-box",
            },
          }}
          variant="persistent"
          anchor="left"
          open={open}
        >
          <DrawerHeader
            sx={{ display: "flex", justifyContent: "space-between" }}
          >
            <h4>Quick Links</h4>
            <IconButton onClick={handleDrawerClose}>
              {theme.direction === "ltr" ? (
                <ChevronLeftIcon />
              ) : (
                <ChevronRightIcon />
              )}
            </IconButton>
          </DrawerHeader>
          <Divider />
          <List>
            {links.map((link, index) => (
              <NextLink href={link.path} key={index} passHref>
                <Link>
                  <ListItem button>
                    <ListItemIcon>{link.icon}</ListItemIcon>
                    <ListItemText primary={link.title} />
                  </ListItem>
                </Link>
              </NextLink>
            ))}
          </List>
          <Divider />
          <List>
            {others.map((link, index) => (
              <NextLink href={link.path} key={index} passHref>
                <Link>
                  <ListItem button>
                    <ListItemIcon>{link.icon}</ListItemIcon>
                    <ListItemText primary={link.title} />
                  </ListItem>
                </Link>
              </NextLink>
            ))}
          </List>
        </Drawer>
        <Main open={open}>
          <DrawerHeader />
          <main className={classes.mainContent}>{children}</main>
          <Footer />
        </Main>
      </Box>
    </>
  );
}

const links = [
  { title: "Home", path: "/", icon: <HomeIcon /> },
  { title: "Notice", path: "/info/notice", icon: <NotificationsIcon /> },
  { title: "Alumni", path: "/alumni", icon: <SchoolIcon /> },
  { title: "Events", path: "/events", icon: <CollectionsIcon /> },
];

const others = [
  { title: "FAQS", path: "/info/faqs", icon: <Questions /> },
  { title: "Feedback", path: "/info/feedback", icon: <Feedback /> },
  { title: "Sitemap", path: "/info/sitemap", icon: <SitemapIcon /> },
];

export default dynamic(() => Promise.resolve(Header), { ssr: false });
